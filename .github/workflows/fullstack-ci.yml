name: Full Stack CI

on:
    push:
        branches: ["*"]
    pull_request:
        paths:
            - "frontEnd/**"
            - "backEnd/**"

jobs:
    #################################
    # BACKEND
    #################################

    # backend-setup:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4

    #     - name: Set up JDK
    #       uses: actions/setup-java@v3
    #       with:
    #         java-version: "21"
    #         distribution: "temurin"

    #     - name: Make Maven Executable
    #       run: chmod +x mvnw
    #       working-directory: backEnd

    # backend-test:
    #   needs: backend-setup
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4
    #     - uses: actions/setup-java@v3
    #       with:
    #         java-version: "21"
    #         distribution: "temurin"
    #     - name: Run Tests
    #       run: ./mvnw clean verify
    #       working-directory: backEnd
    #     - name: Upload Test Results
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: backend-junit
    #         path: backEnd/target/surefire-reports/
    #     - name: Upload Coverage (Jacoco)
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: backend-coverage
    #         path: backEnd/target/site/jacoco/jacoco.xml

    # backend-lint:
    #   needs: backend-setup
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4
    #     - uses: actions/setup-java@v3
    #       with:
    #         java-version: "21"
    #         distribution: "temurin"
    #     - name: Checkstyle
    #       run: ./mvnw checkstyle:check
    #       working-directory: backEnd
    #     - name: Upload Checkstyle Report
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: checkstyle-report
    #         path: backEnd/target/checkstyle-result.xml

    # backend-sonarqube:
    #   needs: backend-test
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4

    #     - name: Set up JDK
    #       uses: actions/setup-java@v3
    #       with:
    #         java-version: "21"
    #         distribution: "temurin"

    #     - name: Cache Maven packages
    #       uses: actions/cache@v3
    #       with:
    #         path: ~/.m2
    #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
    #         restore-keys: |
    #           ${{ runner.os }}-maven-

    #     - name: Build project and run tests
    #       run: ./mvnw clean verify
    #       working-directory: backEnd

    #     - name: SonarQube Scan via Maven
    #       run: ./mvnw sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    #       working-directory: backEnd

    # backend-build:
    #   needs: [backend-test, backend-lint, backend-sonarqube]
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4
    #     - uses: actions/setup-java@v3
    #       with:
    #         java-version: "21"
    #         distribution: "temurin"
    #     - name: Build JAR
    #       run: ./mvnw clean package -DskipTests
    #       working-directory: backEnd
    #     - name: Upload Backend Artifact
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: backend-jar
    #         path: backEnd/target/*.jar

    #################################
    # FRONTEND PIPELINE
    #################################

    frontend-setup:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-cache-frontend-${{ hashFiles('frontend/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-cache-frontend-
            - name: Install Dependencies
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci
              working-directory: frontend

    frontend-ci:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-cache-frontend-${{ hashFiles('frontend/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-cache-frontend-
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend
            - name: Run ESLint
              run: npx eslint . --ext .js,.jsx,.ts,.tsx -f json -o eslint-report.json
              working-directory: frontend
            - name: Run Tests (with coverage)
              run: npm run test -- --coverage
              working-directory: frontend
            - name: Install Sonar Scanner CLI
              run: npm install -g sonar-scanner
            - name: Run SonarQube Scan
              run: |
                  npx sonar-scanner \
                    -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
                    -Dsonar.token=${{ secrets.SONAR_TOKEN }}
              working-directory: frontend

    frontend-build:
        needs: frontend-ci
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Restore cached node modules
              id: cache-npm
              uses: actions/cache@v3
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-cache-frontend-${{ hashFiles('frontend/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-cache-frontend-
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend
            - name: Build Next.js
              run: npm run build
              working-directory: frontend
            - name: Upload Frontend Build Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-build
                  path: frontend/.next/
