name: Full Stack CI

on:
    push:
        branches: ["*"]
    pull_request:
        paths:
            - "frontEnd/**"
            - "backEnd/**"

jobs:
    #################################
    # BACKEND
    #################################

    backend-setup:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK
              uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Make Maven Executable
              run: chmod +x mvnw
              working-directory: backEnd

    backend-test:
        needs: backend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Run Tests
              run: ./mvnw clean verify
              working-directory: backEnd
            - name: Upload Test Results
              uses: actions/upload-artifact@v4
              with:
                  name: backend-junit
                  path: backEnd/target/surefire-reports/
            - name: Upload Coverage (Jacoco)
              uses: actions/upload-artifact@v4
              with:
                  name: backend-coverage
                  path: backEnd/target/site/jacoco/jacoco.xml

    backend-lint:
        needs: backend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Checkstyle
              run: ./mvnw checkstyle:check
              working-directory: backEnd
            - name: Upload Checkstyle Report
              uses: actions/upload-artifact@v4
              with:
                  name: checkstyle-report
                  path: backEnd/target/checkstyle-result.xml

    backend-sonarqube:
        needs: backend-test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK
              uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                      ${{ runner.os }}-maven-

            - name: Build project and run tests
              run: ./mvnw clean verify
              working-directory: backEnd

            - name: SonarQube Scan (Official Action)
              uses: sonarsource/sonarqube-scan-action@v2
              with:
                  projectBaseDir: backEnd
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    backend-build:
        needs: [backend-test, backend-lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Build JAR
              run: ./mvnw clean package -DskipTests
              working-directory: backEnd
            - name: Upload Backend Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: backend-jar
                  path: backEnd/target/*.jar

    #################################
    # FRONTEND
    #################################

    frontend-setup:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend

    frontend-test:
        needs: frontend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - run: npm ci
              working-directory: frontend
            - run: npm run test
              working-directory: frontend
            - uses: actions/upload-artifact@v4
              with:
                  name: frontend-coverage
                  path: frontend/coverage/

    frontend-lint:
        needs: frontend-setup
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - run: npm ci
              working-directory: frontend
            - name: Run ESLint
              run: npx eslint . --ext .js,.jsx,.ts,.tsx -f json -o eslint-report.json
              working-directory: frontend
            - name: Upload ESLint Report
              uses: actions/upload-artifact@v4
              with:
                  name: eslint-report
                  path: frontend/eslint-report.json

    frontend-build:
        needs: [frontend-test, frontend-lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - run: npm ci
              working-directory: frontend
            - run: npm run build
              working-directory: frontend
            - uses: actions/upload-artifact@v4
              with:
                  name: frontend-build
                  path: frontend/.next/
