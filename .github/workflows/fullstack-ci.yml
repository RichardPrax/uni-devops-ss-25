name: Full Stack CI

on:
    push:
        branches: ["*"]
    pull_request:
        paths:
            - "frontend/**"
            - "backend/**"

jobs:
    #################################
    # BACKEND
    #################################

    backend-setup:
        runs-on: ubuntu-latest
        outputs:
            cache-key: ${{ steps.cache.outputs.cache-hit }}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Cache Maven packages
              id: cache
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                      maven-${{ runner.os }}-
            - name: Make Maven Executable
              run: chmod +x mvnw
              working-directory: backend

    backend-test:
        needs: backend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Restore Maven cache
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            - name: Run Tests
              run: ./mvnw clean verify
              working-directory: backend
            - name: Upload JUnit Results
              uses: actions/upload-artifact@v4
              with:
                  name: backend-junit
                  path: backend/target/surefire-reports/
            - name: Upload Coverage
              uses: actions/upload-artifact@v4
              with:
                  name: backend-coverage
                  path: backend/target/site/jacoco/jacoco.xml

    backend-lint:
        needs: backend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Restore Maven cache
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            - name: Checkstyle
              run: ./mvnw checkstyle:check
              working-directory: backend
            - name: Upload Checkstyle Report
              uses: actions/upload-artifact@v4
              with:
                  name: checkstyle-report
                  path: backend/target/checkstyle-result.xml

    backend-sonarqube:
        needs: backend-test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Restore Maven cache
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            - name: Download Coverage
              uses: actions/download-artifact@v4
              with:
                  name: backend-coverage
                  path: backend/target/site/jacoco/
            - name: SonarQube Scan
              run: ./mvnw sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}
              working-directory: backend

    backend-build:
        needs: [backend-test, backend-lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"
            - name: Restore Maven cache
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            - name: Build JAR
              run: ./mvnw clean package -DskipTests
              working-directory: backend
            - name: Upload JAR
              uses: actions/upload-artifact@v4
              with:
                  name: backend-jar
                  path: backend/target/*.jar

    #################################
    # FRONTEND
    #################################

    frontend-setup:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Cache npm
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ runner.os }}-
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend

    frontend-test:
        needs: frontend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Restore npm cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend
            - name: Run Tests
              run: npm run test
              working-directory: frontend
            - name: Upload Coverage
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-coverage
                  path: frontend/coverage/

    frontend-lint:
        needs: frontend-setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Restore npm cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend
            - name: Run ESLint
              run: npx eslint . --ext .js,.jsx,.ts,.tsx -f json -o eslint-report.json
              working-directory: frontend
            - name: Upload ESLint Report
              uses: actions/upload-artifact@v4
              with:
                  name: eslint-report
                  path: frontend/eslint-report.json

    frontend-sonarqube:
        needs: frontend-test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Restore npm cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
            - name: Install Sonar Scanner
              run: npm install -g sonar-scanner
            - name: Download Coverage
              uses: actions/download-artifact@v4
              with:
                  name: frontend-coverage
                  path: frontend/coverage/
            - name: Run SonarQube Scan
              run: |
                  sonar-scanner \
                    -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
                    -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
                    -Dsonar.token=${{ secrets.SONAR_TOKEN }}
              working-directory: frontend

    frontend-build:
        needs: [frontend-test, frontend-lint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Restore npm cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci
              working-directory: frontend
            - name: Build Next.js
              run: npm run build
              working-directory: frontend
            - name: Upload Build
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-build
                  path: frontend/.next/
